<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
using MvcTemplate.Data.Core;
using MvcTemplate.Objects;
using System;
using System.Collections.Generic;
using System.Linq;

namespace MvcTemplate.Services
{
    public class <#= Model.Service #> : BaseService, <#= Model.IService #>
    {
        public <#= Model.Service #>(IUnitOfWork unitOfWork)
            : base(unitOfWork)
        {
        }

        public IEnumerable<<#= Model.View #>> GetViews()
        {
            return UnitOfWork
                .Repository<<#= Model.Model #>>()
                .Query<<#= Model.View #>>()
                .OrderByDescending(view => view.EntityDate);
        }
        public <#= Model.View #> GetView(String id)
        {
            return UnitOfWork.Repository<<#= Model.Model #>>().GetById<<#= Model.View #>>(id);
        }

        public virtual void Create(<#= Model.View #> view)
        {
            <#= Model.Model #> model = UnitOfWork.ToModel<<#= Model.View #>, <#= Model.Model #>>(view);
            UnitOfWork.Repository<<#= Model.Model #>>().Insert(model);
            UnitOfWork.Commit();
        }
        public virtual void Edit(<#= Model.View #> view)
        {
            <#= Model.Model #> model = UnitOfWork.ToModel<<#= Model.View #>, <#= Model.Model #>>(view);
            UnitOfWork.Repository<<#= Model.Model #>>().Update(model);
            UnitOfWork.Commit();
        }
        public virtual void Delete(String id)
        {
            UnitOfWork.Repository<<#= Model.Model #>>().Delete(id);
            UnitOfWork.Commit();
        }
    }
}
