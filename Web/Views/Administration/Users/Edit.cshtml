@model UserView

@using (Html.FormWidgetBox(LinkAction.Details, LinkAction.Delete))
{
    using(Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        using (Html.FormGroup())
        {
            @Html.FormLabelFor(model => model.Username)
            @Html.FormTextBoxFor(model => model.Username)
            @Html.FormValidationFor(model => model.Username)
        }
        using (Html.FormGroup())
        {
        }
        using (Html.FormGroup())
        {
            @Html.FormLabelFor(model => model.Person.RoleId)
            using (Html.ContentGroup())
            {
                @Html.DatalistFor(model => model.Person.RoleId, new BaseDatalist<Role, RoleView>())
            }
            @Html.FormValidationFor(model => model.Person.RoleId)
        }
        using (Html.FormGroup())
        {
        }
        using (Html.FormGroup())
        {
            @Html.FormLabelFor(model => model.Person.FirstName)
            @Html.FormTextBoxFor(model => model.Person.FirstName)
            @Html.FormValidationFor(model => model.Person.FirstName)
        }
        using (Html.FormGroup())
        {
            @Html.FormLabelFor(model => model.Person.LastName)
            @Html.FormTextBoxFor(model => model.Person.LastName)
            @Html.FormValidationFor(model => model.Person.LastName)
        }
        using (Html.FormGroup())
        {
            @Html.FormLabelFor(model => model.Person.DateOfBirth)
            @Html.FormDatePickerFor(model => model.Person.DateOfBirth)
            @Html.FormValidationFor(model => model.Person.DateOfBirth)
        }
        
        @Html.HiddenFor(model => model.Id)
        using (Html.FormActions())
        {
            @Html.FormSubmit()
        }
    }
}
