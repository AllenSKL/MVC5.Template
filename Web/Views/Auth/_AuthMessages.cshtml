@{
    IEnumerable<String> errors = ViewData.ModelState.SelectMany(state => state.Value.Errors).Select(error => error.ErrorMessage);
    MessagesContainer messages = Session["Messages"] as MessagesContainer;
    Session["Messages"] = null;
}

<div class="alerts">
    @if (messages != null)
    {
        foreach (AlertMessage alertMessage in messages)
        {
            <div class="alert alert-@alertMessage.Type.ToString().ToLowerInvariant()"
                 data-fade-out-after="@alertMessage.FadeOutAfter"
                 data-alert-for="@alertMessage.Key">
                <div class="alert-text">
                    <span>@alertMessage.Message</span>
                </div>
                <div class="alert-close">
                    <a class="close" href="#">×</a>
                </div>
            </div>
        }
    }
    @foreach (String errorMessage in errors)
    {
        <div class="alert alert-@AlertMessageType.Danger.ToString().ToLowerInvariant()">
            <div class="alert-text">
                <span>@errorMessage</span>
            </div>
            <div class="alert-close">
                <a class="close" href="#">×</a>
            </div>
        </div>
    }
</div>