<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
using MvcTemplate.Data.Core;
using MvcTemplate.Objects;
using System;
using System.Linq;

namespace MvcTemplate.Services
{
    public class <#= Model.Service #> : BaseService, <#= Model.IService #>
    {
        public <#= Model.Service #>(IUnitOfWork unitOfWork)
            : base(unitOfWork)
        {
        }

        public IQueryable<<#= Model.View #>> GetViews()
        {
            return UnitOfWork
                .Repository<<#= Model.Model #>>()
                .To<<#= Model.View #>>()
                .OrderByDescending(<#= Model.ModelName #> => <#= Model.ModelName #>.CreationDate);
        }
        public TView Get<TView>(String id) where TView : BaseView
        {
            return UnitOfWork.Repository<<#= Model.Model #>>().GetById<TView>(id);
        }

        public void Create(<#= Model.View #> view)
        {
            <#= Model.Model #> <#= Model.ModelName #> = UnitOfWork.To<<#= Model.Model #>>(view);
            UnitOfWork.Repository<<#= Model.Model #>>().Insert(<#= Model.ModelName #>);
            UnitOfWork.Commit();
        }
        public void Edit(<#= Model.View #> view)
        {
            <#= Model.Model #> <#= Model.ModelName #> = UnitOfWork.To<<#= Model.Model #>>(view);
            UnitOfWork.Repository<<#= Model.Model #>>().Update(<#= Model.ModelName #>);
            UnitOfWork.Commit();
        }
        public void Delete(String id)
        {
            UnitOfWork.Repository<<#= Model.Model #>>().Delete(id);
            UnitOfWork.Commit();
        }
    }
}
